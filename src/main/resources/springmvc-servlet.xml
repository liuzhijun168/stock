<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 启动扫描所有的controller -->
	<context:component-scan base-package="com.lzj.control" />
	<!-- 主要作用于@Controller，激活该模式 下面是一种简写形式，完全可以手动配置替代这种简写形式； 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 
		两个bean, 是spring MVC为@Controllers分发请求所必须的 -->
	<mvc:annotation-driven />
	<mvc:resources mapping="/bootstrap/css/**" location="/bootstrap/css/" />
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/bootstrap/js/**" location="/bootstrap/js/" />
	<mvc:resources mapping="/js/**" location="/js/" />
	<mvc:resources mapping="/bootstrap/img/**" location="/bootstrap/img/" />
	<mvc:resources mapping="/bootstrap/font/**" location="/bootstrap/font/" />
	<mvc:resources mapping="/charts/**" location="/charts/" />

	<!-- 全局配置 <mvc:interceptors> <bean class="com.aokunsang.web.interceptor.MyInterceptor"></bean> 
		</mvc:interceptors> -->

	<!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<bean id="jsonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
			</list>
		</property>
	</bean>


	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- session超时 -->
		<mvc:interceptor>
			<mvc:mapping path="/*/*" />
			<bean class="com.lzj.interceptor.SessionTimeoutInterceptor">
				<property name="allowUrls">
					<list>
						<!-- 如果请求中包含以下路径，则不进行拦截 -->
						<value>/system/doLogin</value>
						<value>/system/login</value>
						<value>/js</value>
						<value>/css</value>
						<value>/image</value>
						<value>/images</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 自定义异常处理，SimpleMappingExceptionResolver这个类可以是个空类，但是要写，方便在java代码里面使用 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.ziyou.platform.interceptor.SessionTimeoutException">redirect:/login</prop>
			</props>
		</property>
	</bean>

</beans>